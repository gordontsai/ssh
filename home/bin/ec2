#!/usr/bin/env python3

import os
import sys
import boto3

accepted_actions = ["start", "stop"]

def usage():
  print("Usage: ec2 (%s) instance-name" % " | ".join(accepted_actions))
  exit(1)

def fail(message):
  print(message)
  exit(2)

if len(sys.argv) != 3:
  usage()

action = sys.argv[1]

if not action in accepted_actions:
  usage()

instance_path = os.path.expanduser("~/.ec2_instances")

if not os.path.exists(instance_path):
  fail("'%s' Missing. File required to map instance name to id")

f = open(instance_path)
text = f.read().strip()
f.close()

instance_map = {}
for line in text.split('\n'):
  instance_name, instance_id = line.strip().split()
  instance_map[instance_name] = instance_id

instance_name = sys.argv[2]

if not instance_name in instance_map:
  fail("Instance name '%s' not provided in '%s'" % (instance_name, instance_path))

instance_id = instance_map[instance_name]

def start(instance):
  instance_state = instance.state['Name']
  if instance_state in ['shutting-down', 'terminated']:
    print("Instance has been terminated")
    return
  if instance_state == 'stopping':
    print('Waiting for instance to stop')
    instance.wait_until_stopped()
    instance_state = 'stopped'
  if instance_state == 'stopped':
    print('Starting instance')
    instance.start()
    instance_state = 'pending'
  if instance_state == 'pending':
    print('Waiting for instance to start')
    instance.wait_until_running()
    instance_state = 'running'
  print('Instance is running')

def stop(instance):
  instance_state = instance.state['Name']
  if instance_state in ['shutting-down', 'terminated']:
    print("Instance has been terminated")
    return
  if instance_state == 'pending':
    print('Waiting for instance to start')
    instance.wait_until_running()
    instance_state = 'running'
  if instance_state == 'running':
    print('Stopping instance')
    instance.stop()
    instance_state = 'stopping'
  if instance_state == 'stopping':
    print('Waiting for instance to stop')
    instance.wait_until_stopped()
    instance_state = 'stopped'
  print('Instance is stopped')

actions = {
  'start': start,
  'stop': stop
}

ec2 = boto3.resource('ec2')
instance = ec2.Instance(instance_id)
actions[action](instance)
